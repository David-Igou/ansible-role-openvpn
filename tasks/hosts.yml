---

# The local subnet on this host
- name: Find local subnet CIDR
  set_fact:
    local_cidr: "{{ local_netmask | ipaddr('net') }}"
  vars:
    local_netmask: "{{ ansible_default_ipv4.network }}/{{ ansible_default_ipv4.netmask }}"

# Idempotency:
# Extract CIDRs for all routes currently configured on all play hosts
- name: Extract routes from system route table
  command: /usr/sbin/ip route
  changed_when: false
  register: routes
- name: Convert route CIDRs to facts
  set_fact:
    cidr: "{{ item.split() | first }}"
  with_items: "{{ routes.stdout_lines }}"
  register: cidrs_reg
- name: Canonicalise route CIDR fact structure
  set_fact:
    route_cidrs: "{{ cidrs_reg.results | map(attribute='ansible_facts.cidr') | list | ipv4 | ipaddr('net') }}"

# The list of all subnets for which this hosts must add a route
- name: Find VPN remote subnets
  set_fact:
    vpn_cidr: "{{ vpn_netmask | ipaddr('net') }}"
  vars:
    vpn_netmask: "{{ hostvars[item].ansible_default_ipv4.network }}/{{ hostvars[item].ansible_default_ipv4.netmask }}"
  with_items: "{{ openvpn_servers + openvpn_clients }}"
  register: vpn_cidrs_reg
- name: Canonicalise and filter remote subnet fact structure
  set_fact:
    vpn_cidrs: "{{ vpn_cidrs_reg.results | map(attribute='ansible_facts.vpn_cidr') | list | difference(route_cidrs) }}"

# Find the local VPN client / gateway router
- name: Find our local VPN client gateway router
  set_fact:
    local_vpn_gw: "{{ hostvars[item].ansible_default_ipv4.address }}"
  when:
    - hostvars[item].local_cidr == local_cidr
  with_items: "{{ openvpn_servers + openvpn_clients }}"

# Apply the route ephmerally
- name: Assign routes to remote networks via VPN client gateways
  command:  "/usr/sbin/ip route add {{ item }} via {{ local_vpn_gw }} dev {{ ansible_default_ipv4.interface }}"
  become: true
  with_items: "{{ vpn_cidrs }}"
  when:
    - inventory_hostname != local_vpn_gw

# Apply the route persistently (CentOS/Red Hat)
- name: Define persistent routes to remote networks
  lineinfile:
    line: "{{ item }} via {{ local_vpn_gw }} dev {{ ansible_default_ipv4.interface }}"
    path: "/etc/sysconfig/network-scripts/route-{{ ansible_default_ipv4.interface }}"
    create: yes
    owner: root
    group: root
    mode: 0755
  become: true
  with_items: "{{ vpn_cidrs }}"
  when:
    - inventory_hostname != local_vpn_gw

...
